{"remainingRequest":"/Volumes/work/finalHomework/cym/demo/vue-element-admin-master 2/node_modules/babel-loader/lib/index.js!/Volumes/work/finalHomework/cym/demo/vue-element-admin-master 2/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Volumes/work/finalHomework/cym/demo/vue-element-admin-master 2/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/work/finalHomework/cym/demo/vue-element-admin-master 2/src/components/ThemePicker/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Volumes/work/finalHomework/cym/demo/vue-element-admin-master 2/src/components/ThemePicker/index.vue","mtime":1638874516000},{"path":"/Volumes/work/finalHomework/cym/demo/vue-element-admin-master 2/babel.config.js","mtime":1638874516000},{"path":"/Volumes/work/finalHomework/cym/demo/vue-element-admin-master 2/node_modules/cache-loader/dist/cjs.js","mtime":1648097550000},{"path":"/Volumes/work/finalHomework/cym/demo/vue-element-admin-master 2/node_modules/babel-loader/lib/index.js","mtime":1648097554000},{"path":"/Volumes/work/finalHomework/cym/demo/vue-element-admin-master 2/node_modules/cache-loader/dist/cjs.js","mtime":1648097550000},{"path":"/Volumes/work/finalHomework/cym/demo/vue-element-admin-master 2/node_modules/vue-loader/lib/index.js","mtime":1648097532000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Wb2x1bWVzL3dvcmsvZmluYWxIb21ld29yay9jeW0vZGVtby92dWUtZWxlbWVudC1hZG1pbi1tYXN0ZXIgMi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvci5qcyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcucmVwbGFjZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbHRlci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zbGljZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC50ZXN0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmNvbnN0cnVjdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLnN0aWNreS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuam9pbi5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmNvbmNhdC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm51bWJlci5jb25zdHJ1Y3Rvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm51bWJlci50by1maXhlZC5qcyI7CgovLwovLwovLwovLwovLwovLwovLwovLwovLwp2YXIgdmVyc2lvbiA9IHJlcXVpcmUoJ2VsZW1lbnQtdWkvcGFja2FnZS5qc29uJykudmVyc2lvbjsgLy8gZWxlbWVudC11aSB2ZXJzaW9uIGZyb20gbm9kZV9tb2R1bGVzCgoKdmFyIE9SSUdJTkFMX1RIRU1FID0gJyM0MDlFRkYnOyAvLyBkZWZhdWx0IGNvbG9yCgpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGNoYWxrOiAnJywKICAgICAgLy8gY29udGVudCBvZiB0aGVtZS1jaGFsayBjc3MKICAgICAgdGhlbWU6ICcnCiAgICB9OwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGRlZmF1bHRUaGVtZTogZnVuY3Rpb24gZGVmYXVsdFRoZW1lKCkgewogICAgICByZXR1cm4gdGhpcy4kc3RvcmUuc3RhdGUuc2V0dGluZ3MudGhlbWU7CiAgICB9CiAgfSwKICB3YXRjaDogewogICAgZGVmYXVsdFRoZW1lOiB7CiAgICAgIGhhbmRsZXI6IGZ1bmN0aW9uIGhhbmRsZXIodmFsLCBvbGRWYWwpIHsKICAgICAgICB0aGlzLnRoZW1lID0gdmFsOwogICAgICB9LAogICAgICBpbW1lZGlhdGU6IHRydWUKICAgIH0sCiAgICB0aGVtZTogZnVuY3Rpb24gdGhlbWUodmFsKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciBvbGRWYWwsIHRoZW1lQ2x1c3Rlciwgb3JpZ2luYWxDbHVzdGVyLCAkbWVzc2FnZSwgZ2V0SGFuZGxlciwgdXJsLCBjaGFsa0hhbmRsZXIsIHN0eWxlczsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBvbGRWYWwgPSBfdGhpcy5jaGFsayA/IF90aGlzLnRoZW1lIDogT1JJR0lOQUxfVEhFTUU7CgogICAgICAgICAgICAgICAgaWYgKCEodHlwZW9mIHZhbCAhPT0gJ3N0cmluZycpKSB7CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzOwogICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iKTsKCiAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgdGhlbWVDbHVzdGVyID0gX3RoaXMuZ2V0VGhlbWVDbHVzdGVyKHZhbC5yZXBsYWNlKCcjJywgJycpKTsKICAgICAgICAgICAgICAgIG9yaWdpbmFsQ2x1c3RlciA9IF90aGlzLmdldFRoZW1lQ2x1c3RlcihvbGRWYWwucmVwbGFjZSgnIycsICcnKSk7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyh0aGVtZUNsdXN0ZXIsIG9yaWdpbmFsQ2x1c3Rlcik7CiAgICAgICAgICAgICAgICAkbWVzc2FnZSA9IF90aGlzLiRtZXNzYWdlKHsKICAgICAgICAgICAgICAgICAgbWVzc2FnZTogJyAgQ29tcGlsaW5nIHRoZSB0aGVtZScsCiAgICAgICAgICAgICAgICAgIGN1c3RvbUNsYXNzOiAndGhlbWUtbWVzc2FnZScsCiAgICAgICAgICAgICAgICAgIHR5cGU6ICdzdWNjZXNzJywKICAgICAgICAgICAgICAgICAgZHVyYXRpb246IDAsCiAgICAgICAgICAgICAgICAgIGljb25DbGFzczogJ2VsLWljb24tbG9hZGluZycKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICAgIGdldEhhbmRsZXIgPSBmdW5jdGlvbiBnZXRIYW5kbGVyKHZhcmlhYmxlLCBpZCkgewogICAgICAgICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgICAgIHZhciBvcmlnaW5hbENsdXN0ZXIgPSBfdGhpcy5nZXRUaGVtZUNsdXN0ZXIoT1JJR0lOQUxfVEhFTUUucmVwbGFjZSgnIycsICcnKSk7CgogICAgICAgICAgICAgICAgICAgIHZhciBuZXdTdHlsZSA9IF90aGlzLnVwZGF0ZVN0eWxlKF90aGlzW3ZhcmlhYmxlXSwgb3JpZ2luYWxDbHVzdGVyLCB0aGVtZUNsdXN0ZXIpOwoKICAgICAgICAgICAgICAgICAgICB2YXIgc3R5bGVUYWcgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChpZCk7CgogICAgICAgICAgICAgICAgICAgIGlmICghc3R5bGVUYWcpIHsKICAgICAgICAgICAgICAgICAgICAgIHN0eWxlVGFnID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3R5bGUnKTsKICAgICAgICAgICAgICAgICAgICAgIHN0eWxlVGFnLnNldEF0dHJpYnV0ZSgnaWQnLCBpZCk7CiAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5oZWFkLmFwcGVuZENoaWxkKHN0eWxlVGFnKTsKICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgIHN0eWxlVGFnLmlubmVyVGV4dCA9IG5ld1N0eWxlOwogICAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgICAgfTsKCiAgICAgICAgICAgICAgICBpZiAoX3RoaXMuY2hhbGspIHsKICAgICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDEyOwogICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICB1cmwgPSAiaHR0cHM6Ly91bnBrZy5jb20vZWxlbWVudC11aUAiLmNvbmNhdCh2ZXJzaW9uLCAiL2xpYi90aGVtZS1jaGFsay9pbmRleC5jc3MiKTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxMjsKICAgICAgICAgICAgICAgIHJldHVybiBfdGhpcy5nZXRDU1NTdHJpbmcodXJsLCAnY2hhbGsnKTsKCiAgICAgICAgICAgICAgY2FzZSAxMjoKICAgICAgICAgICAgICAgIGNoYWxrSGFuZGxlciA9IGdldEhhbmRsZXIoJ2NoYWxrJywgJ2NoYWxrLXN0eWxlJyk7CiAgICAgICAgICAgICAgICBjaGFsa0hhbmRsZXIoKTsKICAgICAgICAgICAgICAgIHN0eWxlcyA9IFtdLnNsaWNlLmNhbGwoZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnc3R5bGUnKSkuZmlsdGVyKGZ1bmN0aW9uIChzdHlsZSkgewogICAgICAgICAgICAgICAgICB2YXIgdGV4dCA9IHN0eWxlLmlubmVyVGV4dDsKICAgICAgICAgICAgICAgICAgcmV0dXJuIG5ldyBSZWdFeHAob2xkVmFsLCAnaScpLnRlc3QodGV4dCkgJiYgIS9DaGFsayBWYXJpYWJsZXMvLnRlc3QodGV4dCk7CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIHN0eWxlcy5mb3JFYWNoKGZ1bmN0aW9uIChzdHlsZSkgewogICAgICAgICAgICAgICAgICB2YXIgaW5uZXJUZXh0ID0gc3R5bGUuaW5uZXJUZXh0OwogICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGlubmVyVGV4dCAhPT0gJ3N0cmluZycpIHJldHVybjsKICAgICAgICAgICAgICAgICAgc3R5bGUuaW5uZXJUZXh0ID0gX3RoaXMudXBkYXRlU3R5bGUoaW5uZXJUZXh0LCBvcmlnaW5hbENsdXN0ZXIsIHRoZW1lQ2x1c3Rlcik7CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgICBfdGhpcy4kZW1pdCgnY2hhbmdlJywgdmFsKTsKCiAgICAgICAgICAgICAgICAkbWVzc2FnZS5jbG9zZSgpOwoKICAgICAgICAgICAgICBjYXNlIDE4OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKSgpOwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgdXBkYXRlU3R5bGU6IGZ1bmN0aW9uIHVwZGF0ZVN0eWxlKHN0eWxlLCBvbGRDbHVzdGVyLCBuZXdDbHVzdGVyKSB7CiAgICAgIHZhciBuZXdTdHlsZSA9IHN0eWxlOwogICAgICBvbGRDbHVzdGVyLmZvckVhY2goZnVuY3Rpb24gKGNvbG9yLCBpbmRleCkgewogICAgICAgIG5ld1N0eWxlID0gbmV3U3R5bGUucmVwbGFjZShuZXcgUmVnRXhwKGNvbG9yLCAnaWcnKSwgbmV3Q2x1c3RlcltpbmRleF0pOwogICAgICB9KTsKICAgICAgcmV0dXJuIG5ld1N0eWxlOwogICAgfSwKICAgIGdldENTU1N0cmluZzogZnVuY3Rpb24gZ2V0Q1NTU3RyaW5nKHVybCwgdmFyaWFibGUpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUpIHsKICAgICAgICB2YXIgeGhyID0gbmV3IFhNTEh0dHBSZXF1ZXN0KCk7CgogICAgICAgIHhoci5vbnJlYWR5c3RhdGVjaGFuZ2UgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgICBpZiAoeGhyLnJlYWR5U3RhdGUgPT09IDQgJiYgeGhyLnN0YXR1cyA9PT0gMjAwKSB7CiAgICAgICAgICAgIF90aGlzMlt2YXJpYWJsZV0gPSB4aHIucmVzcG9uc2VUZXh0LnJlcGxhY2UoL0Bmb250LWZhY2V7W159XSt9LywgJycpOwogICAgICAgICAgICByZXNvbHZlKCk7CiAgICAgICAgICB9CiAgICAgICAgfTsKCiAgICAgICAgeGhyLm9wZW4oJ0dFVCcsIHVybCk7CiAgICAgICAgeGhyLnNlbmQoKTsKICAgICAgfSk7CiAgICB9LAogICAgZ2V0VGhlbWVDbHVzdGVyOiBmdW5jdGlvbiBnZXRUaGVtZUNsdXN0ZXIodGhlbWUpIHsKICAgICAgdmFyIHRpbnRDb2xvciA9IGZ1bmN0aW9uIHRpbnRDb2xvcihjb2xvciwgdGludCkgewogICAgICAgIHZhciByZWQgPSBwYXJzZUludChjb2xvci5zbGljZSgwLCAyKSwgMTYpOwogICAgICAgIHZhciBncmVlbiA9IHBhcnNlSW50KGNvbG9yLnNsaWNlKDIsIDQpLCAxNik7CiAgICAgICAgdmFyIGJsdWUgPSBwYXJzZUludChjb2xvci5zbGljZSg0LCA2KSwgMTYpOwoKICAgICAgICBpZiAodGludCA9PT0gMCkgewogICAgICAgICAgLy8gd2hlbiBwcmltYXJ5IGNvbG9yIGlzIGluIGl0cyByZ2Igc3BhY2UKICAgICAgICAgIHJldHVybiBbcmVkLCBncmVlbiwgYmx1ZV0uam9pbignLCcpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICByZWQgKz0gTWF0aC5yb3VuZCh0aW50ICogKDI1NSAtIHJlZCkpOwogICAgICAgICAgZ3JlZW4gKz0gTWF0aC5yb3VuZCh0aW50ICogKDI1NSAtIGdyZWVuKSk7CiAgICAgICAgICBibHVlICs9IE1hdGgucm91bmQodGludCAqICgyNTUgLSBibHVlKSk7CiAgICAgICAgICByZWQgPSByZWQudG9TdHJpbmcoMTYpOwogICAgICAgICAgZ3JlZW4gPSBncmVlbi50b1N0cmluZygxNik7CiAgICAgICAgICBibHVlID0gYmx1ZS50b1N0cmluZygxNik7CiAgICAgICAgICByZXR1cm4gIiMiLmNvbmNhdChyZWQpLmNvbmNhdChncmVlbikuY29uY2F0KGJsdWUpOwogICAgICAgIH0KICAgICAgfTsKCiAgICAgIHZhciBzaGFkZUNvbG9yID0gZnVuY3Rpb24gc2hhZGVDb2xvcihjb2xvciwgc2hhZGUpIHsKICAgICAgICB2YXIgcmVkID0gcGFyc2VJbnQoY29sb3Iuc2xpY2UoMCwgMiksIDE2KTsKICAgICAgICB2YXIgZ3JlZW4gPSBwYXJzZUludChjb2xvci5zbGljZSgyLCA0KSwgMTYpOwogICAgICAgIHZhciBibHVlID0gcGFyc2VJbnQoY29sb3Iuc2xpY2UoNCwgNiksIDE2KTsKICAgICAgICByZWQgPSBNYXRoLnJvdW5kKCgxIC0gc2hhZGUpICogcmVkKTsKICAgICAgICBncmVlbiA9IE1hdGgucm91bmQoKDEgLSBzaGFkZSkgKiBncmVlbik7CiAgICAgICAgYmx1ZSA9IE1hdGgucm91bmQoKDEgLSBzaGFkZSkgKiBibHVlKTsKICAgICAgICByZWQgPSByZWQudG9TdHJpbmcoMTYpOwogICAgICAgIGdyZWVuID0gZ3JlZW4udG9TdHJpbmcoMTYpOwogICAgICAgIGJsdWUgPSBibHVlLnRvU3RyaW5nKDE2KTsKICAgICAgICByZXR1cm4gIiMiLmNvbmNhdChyZWQpLmNvbmNhdChncmVlbikuY29uY2F0KGJsdWUpOwogICAgICB9OwoKICAgICAgdmFyIGNsdXN0ZXJzID0gW3RoZW1lXTsKCiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDw9IDk7IGkrKykgewogICAgICAgIGNsdXN0ZXJzLnB1c2godGludENvbG9yKHRoZW1lLCBOdW1iZXIoKGkgLyAxMCkudG9GaXhlZCgyKSkpKTsKICAgICAgfQoKICAgICAgY2x1c3RlcnMucHVzaChzaGFkZUNvbG9yKHRoZW1lLCAwLjEpKTsKICAgICAgcmV0dXJuIGNsdXN0ZXJzOwogICAgfQogIH0KfTs="},{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAUA,yD,CAAA;;;AACA,+B,CAAA;;AAEA;AACAA,MADA,kBACA;AACA;AACAC,eADA;AACA;AACAC;AAFA;AAIA,GANA;AAOAC;AACAC,gBADA,0BACA;AACA;AACA;AAHA,GAPA;AAYAC;AACAD;AACAE;AACA;AACA,OAHA;AAIAC;AAJA,KADA;AAOAL,SAPA,iBAOAM,GAPA,EAOA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACAC,sBADA,GACA,0CADA;;AAAA,sBAEA,uBAFA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAGAC,4BAHA,GAGA,2CAHA;AAIAC,+BAJA,GAIA,8CAJA;AAKAC;AAEAC,wBAPA,GAOA;AACAC,kDADA;AAEAC,8CAFA;AAGAC,iCAHA;AAIAC,6BAJA;AAKAC;AALA,kBAPA;;AAeAC,0BAfA,GAeA;AACA;AACA;;AACA;;AAEA;;AACA;AACAC;AACAA;AACAC;AACA;;AACAD;AACA,mBAXA;AAYA,iBA5BA;;AAAA,oBA8BA,WA9BA;AAAA;AAAA;AAAA;;AA+BAE,mBA/BA,0CA+BAC,OA/BA;AAAA;AAAA,uBAgCA,gCAhCA;;AAAA;AAmCAC,4BAnCA,GAmCAL,kCAnCA;AAqCAK;AAEAC,sBAvCA,GAuCA,kDACAC,MADA,CACA;AACA;AACA;AACA,iBAJA,CAvCA;AA4CAD;AACA;AACA;AACAE;AACA,iBAJA;;AAMA;;AAEAd;;AApDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqDA;AA5DA,GAZA;AA2EAe;AACAC,eADA,uBACAF,KADA,EACAG,UADA,EACAC,UADA,EACA;AACA;AACAD;AACAE;AACA,OAFA;AAGA;AACA,KAPA;AASAC,gBATA,wBASAX,GATA,EASAY,QATA,EASA;AAAA;;AACA;AACA;;AACAC;AACA;AACA;AACAC;AACA;AACA,SALA;;AAMAD;AACAA;AACA,OAVA;AAWA,KArBA;AAuBAE,mBAvBA,2BAuBAnC,KAvBA,EAuBA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AACA;AACA,SAFA,MAEA;AACAoC;AACAC;AACAC;AAEAF;AACAC;AACAC;AAEA;AACA;AACA,OAlBA;;AAoBA;AACA;AACA;AACA;AAEAF;AACAC;AACAC;AAEAF;AACAC;AACAC;AAEA;AACA,OAdA;;AAgBA;;AACA;AACAC;AACA;;AACAA;AACA;AACA;AAlEA;AA3EA","names":["data","chalk","theme","computed","defaultTheme","watch","handler","immediate","val","oldVal","themeCluster","originalCluster","console","$message","message","customClass","type","duration","iconClass","getHandler","styleTag","document","url","version","chalkHandler","styles","filter","style","methods","updateStyle","oldCluster","newCluster","newStyle","getCSSString","variable","xhr","resolve","getThemeCluster","red","green","blue","clusters"],"sourceRoot":"src/components/ThemePicker","sources":["index.vue"],"sourcesContent":["<template>\n  <el-color-picker\n    v-model=\"theme\"\n    :predefine=\"['#409EFF', '#1890ff', '#304156','#212121','#11a983', '#13c2c2', '#6959CD', '#f5222d', ]\"\n    class=\"theme-picker\"\n    popper-class=\"theme-picker-dropdown\"\n  />\n</template>\n\n<script>\nconst version = require('element-ui/package.json').version // element-ui version from node_modules\nconst ORIGINAL_THEME = '#409EFF' // default color\n\nexport default {\n  data() {\n    return {\n      chalk: '', // content of theme-chalk css\n      theme: ''\n    }\n  },\n  computed: {\n    defaultTheme() {\n      return this.$store.state.settings.theme\n    }\n  },\n  watch: {\n    defaultTheme: {\n      handler: function(val, oldVal) {\n        this.theme = val\n      },\n      immediate: true\n    },\n    async theme(val) {\n      const oldVal = this.chalk ? this.theme : ORIGINAL_THEME\n      if (typeof val !== 'string') return\n      const themeCluster = this.getThemeCluster(val.replace('#', ''))\n      const originalCluster = this.getThemeCluster(oldVal.replace('#', ''))\n      console.log(themeCluster, originalCluster)\n\n      const $message = this.$message({\n        message: '  Compiling the theme',\n        customClass: 'theme-message',\n        type: 'success',\n        duration: 0,\n        iconClass: 'el-icon-loading'\n      })\n\n      const getHandler = (variable, id) => {\n        return () => {\n          const originalCluster = this.getThemeCluster(ORIGINAL_THEME.replace('#', ''))\n          const newStyle = this.updateStyle(this[variable], originalCluster, themeCluster)\n\n          let styleTag = document.getElementById(id)\n          if (!styleTag) {\n            styleTag = document.createElement('style')\n            styleTag.setAttribute('id', id)\n            document.head.appendChild(styleTag)\n          }\n          styleTag.innerText = newStyle\n        }\n      }\n\n      if (!this.chalk) {\n        const url = `https://unpkg.com/element-ui@${version}/lib/theme-chalk/index.css`\n        await this.getCSSString(url, 'chalk')\n      }\n\n      const chalkHandler = getHandler('chalk', 'chalk-style')\n\n      chalkHandler()\n\n      const styles = [].slice.call(document.querySelectorAll('style'))\n        .filter(style => {\n          const text = style.innerText\n          return new RegExp(oldVal, 'i').test(text) && !/Chalk Variables/.test(text)\n        })\n      styles.forEach(style => {\n        const { innerText } = style\n        if (typeof innerText !== 'string') return\n        style.innerText = this.updateStyle(innerText, originalCluster, themeCluster)\n      })\n\n      this.$emit('change', val)\n\n      $message.close()\n    }\n  },\n\n  methods: {\n    updateStyle(style, oldCluster, newCluster) {\n      let newStyle = style\n      oldCluster.forEach((color, index) => {\n        newStyle = newStyle.replace(new RegExp(color, 'ig'), newCluster[index])\n      })\n      return newStyle\n    },\n\n    getCSSString(url, variable) {\n      return new Promise(resolve => {\n        const xhr = new XMLHttpRequest()\n        xhr.onreadystatechange = () => {\n          if (xhr.readyState === 4 && xhr.status === 200) {\n            this[variable] = xhr.responseText.replace(/@font-face{[^}]+}/, '')\n            resolve()\n          }\n        }\n        xhr.open('GET', url)\n        xhr.send()\n      })\n    },\n\n    getThemeCluster(theme) {\n      const tintColor = (color, tint) => {\n        let red = parseInt(color.slice(0, 2), 16)\n        let green = parseInt(color.slice(2, 4), 16)\n        let blue = parseInt(color.slice(4, 6), 16)\n\n        if (tint === 0) { // when primary color is in its rgb space\n          return [red, green, blue].join(',')\n        } else {\n          red += Math.round(tint * (255 - red))\n          green += Math.round(tint * (255 - green))\n          blue += Math.round(tint * (255 - blue))\n\n          red = red.toString(16)\n          green = green.toString(16)\n          blue = blue.toString(16)\n\n          return `#${red}${green}${blue}`\n        }\n      }\n\n      const shadeColor = (color, shade) => {\n        let red = parseInt(color.slice(0, 2), 16)\n        let green = parseInt(color.slice(2, 4), 16)\n        let blue = parseInt(color.slice(4, 6), 16)\n\n        red = Math.round((1 - shade) * red)\n        green = Math.round((1 - shade) * green)\n        blue = Math.round((1 - shade) * blue)\n\n        red = red.toString(16)\n        green = green.toString(16)\n        blue = blue.toString(16)\n\n        return `#${red}${green}${blue}`\n      }\n\n      const clusters = [theme]\n      for (let i = 0; i <= 9; i++) {\n        clusters.push(tintColor(theme, Number((i / 10).toFixed(2))))\n      }\n      clusters.push(shadeColor(theme, 0.1))\n      return clusters\n    }\n  }\n}\n</script>\n\n<style>\n.theme-message,\n.theme-picker-dropdown {\n  z-index: 99999 !important;\n}\n\n.theme-picker .el-color-picker__trigger {\n  height: 26px !important;\n  width: 26px !important;\n  padding: 2px;\n}\n\n.theme-picker-dropdown .el-color-dropdown__link-btn {\n  display: none;\n}\n</style>\n"]}]}